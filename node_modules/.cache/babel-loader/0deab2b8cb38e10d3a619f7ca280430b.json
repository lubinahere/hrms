{"ast":null,"code":"var _jsxFileName = \"/Users/yafsal/lubina/hrms/src/components/attendance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal } from 'reactstrap';\nimport { punchIn, punchOut } from '../api/punch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Attendance = ({\n  userSession,\n  setUserSession\n}) => {\n  _s();\n\n  const punchInHandler = async () => {\n    const response = await punchIn();\n    const parsedResponse = await response.json();\n    console.log(parsedResponse); // setUserSession({ ...userSession, punchInDateTime })\n  };\n\n  const [openModal, setModal] = React.useState(false);\n  const [text, setText] = React.useState(\"\");\n\n  const handleText = e => {\n    setText(e.target.value);\n  };\n\n  const handleSave = e => {\n    punchOut('workUpdates');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: punchInHandler,\n      disabled: !!userSession.punchInDateTime,\n      children: \"Punch In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !userSession.punchInDateTime || !!userSession.punchOutDateTime,\n      onClick: () => setModal(!openModal),\n      children: \" Punch Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: openModal,\n      size: \"\",\n      children: [\"Work Updates\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleText,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        value: \"Save\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Attendance, \"bYi0MB8vjYn8+WlsXXKAfTbTLQ8=\");\n\n_c = Attendance;\nexport default Attendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attendance\");","map":{"version":3,"sources":["/Users/yafsal/lubina/hrms/src/components/attendance.tsx"],"names":["React","Modal","punchIn","punchOut","Attendance","userSession","setUserSession","punchInHandler","response","parsedResponse","json","console","log","openModal","setModal","useState","text","setText","handleText","e","target","value","handleSave","punchInDateTime","punchOutDateTime"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,cAAlC;;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAsD;AAAA;;AACrE,QAAMC,cAAc,GAAG,YAAY;AAC/B,UAAMC,QAAa,GAAG,MAAMN,OAAO,EAAnC;AACA,UAAMO,cAAc,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ,EAH+B,CAK/B;AACH,GAND;;AAQA,QAAM,CAACI,SAAD,EAAYC,QAAZ,IAAwBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACe,QAAN,CAAe,EAAf,CAAxB;;AACA,QAAMG,UAAU,GAAIC,CAAD,IAA4C;AAC3DF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIH,CAAD,IAAY;AAC3BhB,IAAAA,QAAQ,CAAC,aAAD,CAAR;AAEH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEI,cAAjB;AACI,MAAA,QAAQ,EAAE,CAAC,CAACF,WAAW,CAACkB,eAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAQ,MAAA,QAAQ,EAAE,CAAClB,WAAW,CAACkB,eAAb,IAAgC,CAAC,CAAClB,WAAW,CAACmB,gBAAhE;AACI,MAAA,OAAO,EAAE,MAAMV,QAAQ,CAAC,CAACD,SAAF,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEA,SAAf;AAA0B,MAAA,IAAI,EAAC,EAA/B;AAAA,8CAEI;AAAO,QAAA,QAAQ,EAAEK,UAAjB;AAA6B,QAAA,KAAK,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEM,UAAjB;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMlB,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Modal } from 'reactstrap';\nimport { punchIn, punchOut } from '../api/punch';\nimport { UserSession } from '../App';\n\ninterface AttendanceProps {\n    userSession: UserSession;\n    setUserSession: (userSession: UserSession) => void;\n}\n\nconst Attendance = ({ userSession, setUserSession }: AttendanceProps) => {\n    const punchInHandler = async () => {\n        const response: any = await punchIn();\n        const parsedResponse = await response.json();\n        console.log(parsedResponse);\n        \n        // setUserSession({ ...userSession, punchInDateTime })\n    }\n\n    const [openModal, setModal] = React.useState(false);\n    const [text, setText] = React.useState(\"\");\n    const handleText = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setText(e.target.value)\n    }\n\n    const handleSave = (e: any) => {\n        punchOut('workUpdates');\n\n    }\n\n    return (\n        <div>\n            <button onClick={punchInHandler}\n                disabled={!!userSession.punchInDateTime}>Punch In</button>\n            <button disabled={!userSession.punchInDateTime || !!userSession.punchOutDateTime}\n                onClick={() => setModal(!openModal)}> Punch Out</button>\n            <Modal isOpen={openModal} size=\"\" >\n                Work Updates\n                <input onChange={handleText} value={text} />\n                <button onClick={handleSave} value=\"Save\">Save</button>\n            </Modal>\n        </div>\n    )\n\n}\nexport default Attendance;"]},"metadata":{},"sourceType":"module"}