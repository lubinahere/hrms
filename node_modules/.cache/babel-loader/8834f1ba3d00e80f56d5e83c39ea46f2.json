{"ast":null,"code":"var _jsxFileName = \"/Users/yafsal/lubina/hrms/src/components/attendance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal } from 'reactstrap';\nimport { punchIn } from '../api/punchIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Attendance = ({\n  userSession,\n  setUserSession\n}) => {\n  _s();\n\n  const punchInHandler = () => {\n    punchIn(user);\n  };\n\n  const [openModal, setModal] = React.useState(false);\n  const [text, setText] = React.useState(\"\");\n\n  const handleText = e => {\n    setText(e.target.value);\n  };\n\n  const handleSave = e => {\n    const punches = JSON.parse(localStorage.getItem(\"punches\") || \"{}\");\n    const currentEmployee = punches[\"emp_lubina\"] || {};\n    const punchOutTimeDate = new Date();\n    currentEmployee[punchOutTimeDate.toISOString().split(\"T\")[0]] = {\n      punchOutTimeDate\n    };\n    punches[\"emp_lubina\"] = currentEmployee;\n    localStorage.setItem(\"punches\", JSON.stringify(punches));\n    setUserSession({ ...userSession,\n      punchOutDateTime: punchOutTimeDate.toISOString()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: punchInHandler,\n      disabled: !!userSession.punchInDateTime,\n      children: \"Punch In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !userSession.punchInDateTime || !!userSession.punchOutDateTime,\n      onClick: () => setModal(!openModal),\n      children: \" Punch Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: openModal,\n      size: \"\",\n      children: [\"Work Updates\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleText,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        value: \"Save\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Attendance, \"bYi0MB8vjYn8+WlsXXKAfTbTLQ8=\");\n\n_c = Attendance;\nexport default Attendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attendance\");","map":{"version":3,"sources":["/Users/yafsal/lubina/hrms/src/components/attendance.tsx"],"names":["React","Modal","punchIn","Attendance","userSession","setUserSession","punchInHandler","user","openModal","setModal","useState","text","setText","handleText","e","target","value","handleSave","punches","JSON","parse","localStorage","getItem","currentEmployee","punchOutTimeDate","Date","toISOString","split","setItem","stringify","punchOutDateTime","punchInDateTime"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AASA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAsD;AAAA;;AACrE,QAAMC,cAAc,GAAG,MAAM;AACzBJ,IAAAA,OAAO,CAAEK,IAAF,CAAP;AAEH,GAHD;;AAKA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAAxB;;AACA,QAAMG,UAAU,GAAIC,CAAD,IAA4C;AAC3DF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIH,CAAD,IAAY;AAC3B,UAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,IAA9C,CAAhB;AACA,UAAMC,eAAe,GAAGL,OAAO,CAAC,YAAD,CAAP,IAAyB,EAAjD;AACA,UAAMM,gBAAgB,GAAG,IAAIC,IAAJ,EAAzB;AACAF,IAAAA,eAAe,CAACC,gBAAgB,CAACE,WAAjB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAD,CAAf,GAAgE;AAC5DH,MAAAA;AAD4D,KAAhE;AAGAN,IAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBK,eAAxB;AACAF,IAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAeX,OAAf,CAAhC;AACAb,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB0B,MAAAA,gBAAgB,EAAEN,gBAAgB,CAACE,WAAjB;AAAnC,KAAD,CAAd;AAEH,GAXD;;AAcA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEpB,cAAjB;AACI,MAAA,QAAQ,EAAE,CAAC,CAACF,WAAW,CAAC2B,eAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAQ,MAAA,QAAQ,EAAE,CAAC3B,WAAW,CAAC2B,eAAb,IAAgC,CAAC,CAAC3B,WAAW,CAAC0B,gBAAhE;AACI,MAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAC,CAACD,SAAF,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEA,SAAf;AAA0B,MAAA,IAAI,EAAC,EAA/B;AAAA,8CAEI;AAAO,QAAA,QAAQ,EAAEK,UAAjB;AAA6B,QAAA,KAAK,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEM,UAAjB;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxCD;;GAAMd,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Modal } from 'reactstrap';\nimport { punchIn } from '../api/punchIn';\nimport { punchOut } from '../api/punchOut';\nimport { UserSession } from '../App';\n\ninterface AttendanceProps {\n    userSession: UserSession;\n    setUserSession: (userSession: UserSession) => void;\n}\n\nconst Attendance = ({ userSession, setUserSession }: AttendanceProps) => {\n    const punchInHandler = () => {\n        punchIn (user);\n\n    }\n\n    const [openModal, setModal] = React.useState(false);\n    const [text, setText] = React.useState(\"\");\n    const handleText = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setText(e.target.value)\n    }\n\n    const handleSave = (e: any) => {\n        const punches = JSON.parse(localStorage.getItem(\"punches\") || \"{}\")\n        const currentEmployee = punches[\"emp_lubina\"] || {}\n        const punchOutTimeDate = new Date();\n        currentEmployee[punchOutTimeDate.toISOString().split(\"T\")[0]] = {\n            punchOutTimeDate,\n        }\n        punches[\"emp_lubina\"] = currentEmployee;\n        localStorage.setItem(\"punches\", JSON.stringify(punches));\n        setUserSession({...userSession, punchOutDateTime: punchOutTimeDate.toISOString()});\n\n    }\n\n\n    return (\n        <div>\n            <button onClick={punchInHandler}\n                disabled={!!userSession.punchInDateTime}>Punch In</button>\n            <button disabled={!userSession.punchInDateTime || !!userSession.punchOutDateTime}\n                onClick={() => setModal(!openModal)}> Punch Out</button>\n            <Modal isOpen={openModal} size=\"\" >\n                Work Updates\n                <input onChange={handleText} value={text} />\n                <button onClick={handleSave} value=\"Save\">Save</button>\n            </Modal>\n        </div>\n    )\n\n}\nexport default Attendance;"]},"metadata":{},"sourceType":"module"}